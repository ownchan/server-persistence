<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ownchan.server.persistence.mapper.DbCloudLabelMapper">

  <resultMap id="defaultResultMap" type="DbCloudLabel">
    <id column="id" property="id" />
    <result column="text" property="text" />
    <result column="status" property="status" />
    <result column="status_reason" property="statusReason" />
    <result column="initial_text" property="initialText" />
    <result column="cloud_provider_name" property="cloudProviderName" />
    <result column="cloud_provider_label_id" property="cloudProviderLabelId" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="update_user_id" property="updateUserId" />
  </resultMap>
  
  <select id="fetch" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStream">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
  </select>

  <select id="stream" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStream">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
  </select>

  <select id="fetchAll" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStreamAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
  </select>

  <select id="streamAll" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStreamAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
  </select>

  <select id="set">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.updateAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applyColumnToValueMappings"/>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applyGroupedFilterParams"/>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applySortingParams"/>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applyLimitParam"/>
  </select>

  <delete id="purge">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.deleteAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applyGroupedFilterParams"/>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applySortingParams"/>
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.applyLimitParam"/>
  </delete>

  <delete id="purgeAll">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.deleteAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
  </delete>

  <select id="get" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStreamAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
    where id = #{id}
  </select>

  <delete id="delete">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.deleteAll">
      <property name="targetTable" value="ocn_cloud_label"/>
    </include>
    where id = #{id}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into ocn_cloud_label (
      text, 
      status, 
      status_reason, 
      initial_text, 
      cloud_provider_name, 
      cloud_provider_label_id, 
      update_user_id
    )
    values (
      #{text}, 
      #{status}, 
      #{statusReason}, 
      #{initialText}, 
      #{cloudProviderName}, 
      #{cloudProviderLabelId}, 
      #{updateUserId}
    )
  </insert>
  
  <update id="update">
    update ocn_cloud_label
    set 
      text = #{text},
      status = #{status},
      status_reason = #{statusReason},
      initial_text = #{initialText},
      cloud_provider_name = #{cloudProviderName},
      cloud_provider_label_id = #{cloudProviderLabelId},
      update_user_id = #{updateUserId}
    where id = #{id}
  </update>
  
</mapper>
