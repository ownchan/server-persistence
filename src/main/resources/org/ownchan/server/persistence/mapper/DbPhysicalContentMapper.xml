<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ownchan.server.persistence.mapper.DbPhysicalContentMapper">

  <resultMap id="defaultResultMap" type="DbPhysicalContent">
    <id column="id" property="id" />
    <result column="type" property="type" />
    <result column="status" property="status" />
    <result column="status_reason" property="statusReason" />
    <result column="storage_folder_year" property="storageFolderYear" />
    <result column="storage_folder_month" property="storageFolderMonth" />
    <result column="storage_folder_day" property="storageFolderDay" />
    <result column="storage_folder_uuid" property="storageFolderUuid" />
    <result column="content_checksum" property="contentChecksum" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="physical_content_type" property="physicalContentType" />
    <result column="external_content_link" property="externalContentLink" />
    <result column="additional_metadata" property="additionalMetadata" />
  </resultMap>

  <select id="fetch" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStream">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </select>

  <select id="stream" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStream">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </select>

  <select id="fetchAll" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStreamAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </select>

  <select id="streamAll" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStreamAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </select>

  <update id="set">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.set">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </update>

  <update id="setAll">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.setAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </update>

  <delete id="purge">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.purge">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </delete>

  <delete id="purgeAll">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.deleteAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </delete>

  <select id="count" resultType="long">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.count">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </select>

  <select id="countAll" resultType="long">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.countAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
  </select>

  <select id="get" resultMap="defaultResultMap">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.fetchOrStreamAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
    where id = #{id}
  </select>

  <delete id="delete">
    <include refid="org.ownchan.server.persistence.mapper.GenericMapper.deleteAll">
      <property name="targetTable" value="ocn_physical_content"/>
    </include>
    where id = #{id}
  </delete>

  <insert id="insert">
    <selectKey keyProperty="obj.id" order="AFTER" resultType="long">
      select last_insert_id()
    </selectKey>
    insert into ocn_physical_content (
      type,
      status,
      status_reason,
      storage_folder_year,
      storage_folder_month,
      storage_folder_day,
      storage_folder_uuid,
      content_checksum,
      physical_content_type,
      external_content_link,
      additional_metadata
      )
    values (
      #{obj.type},
      #{obj.status},
      #{obj.statusReason},
      #{obj.storageFolderYear},
      #{obj.storageFolderMonth},
      #{obj.storageFolderDay},
      #{obj.storageFolderUuid},
      #{obj.contentChecksum},
      #{obj.physicalContentType},
      #{obj.externalContentLink},
      #{obj.additionalMetadata}
    )
    <if test="ignoreDuplicateKey">
      on duplicate key update
        id = last_insert_id(id)
        <if test="updateOnDuplicateKey">
          ,
          <include refid="assignUpdateValues"/>
        </if>
    </if>
  </insert>

  <update id="update">
    update ocn_physical_content
    set
      <include refid="assignUpdateValues"/>
    where id = #{obj.id}
  </update>

  <sql id="assignUpdateValues">
      type = #{obj.type},
      status = #{obj.status},
      status_reason = #{obj.statusReason},
      storage_folder_year = #{obj.storageFolderYear},
      storage_folder_month = #{obj.storageFolderMonth},
      storage_folder_day = #{obj.storageFolderDay},
      storage_folder_uuid = #{obj.storageFolderUuid},
      content_checksum = #{obj.contentChecksum},
      physical_content_type = #{obj.physicalContentType},
      external_content_link = #{obj.externalContentLink},
      additional_metadata = #{obj.additionalMetadata}
  </sql>

</mapper>
